<?php

/**
 * @file
 * Module to enable CSS responsive share buttons.
 */

/**
 * Implements hook_help().
 */
function responsive_share_buttons_help($path, $arg) {
  $output = '';
  switch ($path) {
    case 'admin/config/modules#description':
      $output .= t('Add a responsive social media share block to all pages.');
      break;

    case 'admin/config/user-interface/responsive_share_buttons':
      $output .= t('<p>This is a simple module that adds a social media block to all pages.</p>');
      break;
  }
  return $output;
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function responsive_share_buttons_contextual_links_view_alter(&$element, $items) {
  $block = isset($element['#element']['#block']) ? $element['#element']['#block'] : NULL;
  if (is_object($block) && $block->module == 'responsive_share_buttons') {
    if ($block->delta == 'share' && user_access('configure responsive share buttons')) {
      $element['#links']['responsive_share_buttons'] = array(
        'title' => t('Configure responsive share buttons'),
        'href' => 'admin/config/user-interface/responsive_share_buttons',
        'query' => drupal_get_destination(),
        'attributes' => array(
          'title' => t('Configure the responsive share butotons links.'),
        ),
      );
    }
  }
}
/**
 * Implements hook_theme().
 */
function responsive_share_buttons_theme($existing, $type, $theme, $path) {
  return array(
    'responsive_share_buttons' => array(
      'template' => 'responsive_share_buttons',
      'variables' => array(
        'buttons' => NULL,
      ),
    ),
    'responsive_share_buttons_settings' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Theme function for slideshow_manage().
 */
function theme_responsive_share_buttons_settings($variables) {
  $form = $variables['form'];

  $rows = array();
  foreach (element_children($form['networks']) as $network) {
    $form['networks'][$network]['weight']['#attributes']['class'] = array('share-networks-order-weight');
    $rows[] = array(
      'data' => array(
        array('class' => array('slide-cross')),
        drupal_render($form['networks'][$network]['active']),
        drupal_render($form['networks'][$network]['weight']),
      ),
      'class' => array('draggable'),
    );
  }

  $header = array(t('Order'), t('Active'), t('Weight'));
  $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'share-networks-order')));
  $output .= drupal_render_children($form);

  drupal_add_tabledrag('share-networks-order', 'order', 'sibling', 'share-networks-order-weight');

  return $output;
}

/**
 * Theme preprocess function for theme_responsive_share_buttons().
 */
function template_preprocess_responsive_share_buttons(&$vars) {

  $config = \Drupal::config('responsive_share_buttons.settings')->get();

  $networks = $config['networks'];

  $url = urlencode(url(current_path(), array('absolute' => TRUE)));

  $title = urlencode(drupal_get_title());

  foreach ($networks as $name => $network) {
    if ($network['active']) {
      $links[] = _prepare_share_link($name, $url, $title);
    }
  }

  $vars['buttons'] = theme('item_list', array(
    'items' => $links,
    'attributes' => array(
      'class' => array(
        'share-inner-wrp',
      ),
    ),
  ));
}

/**
 * Implements template_preprocess_block().
 */
function responsive_share_buttons_preprocess_block(&$vars) {
  if ($vars['plugin_id'] == 'responsive_sharing_buttons') {
    $vars['#attributes']['class'][] = 'block-responsive-share-buttons-share';
  }
}

/**
 * Implements hook_block_view_BASE_BLOCK_ID_alter().
 */
function responsive_share_buttons_block_view_responsive_sharing_buttons_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
    $build['#contextual_links']['responsive_share_buttons'] = array(
      'route_parameters' => array('responsive_share_buttons' => 'responsive_share_buttons'),
    );
}
